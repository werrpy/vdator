name: integration tests

on: [push, pull_request]

defaults:
  run:
    working-directory: ./vdator

jobs:
  dependencies:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install packages
        run: sudo apt-get install -y expect python-dev libhunspell-dev
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  api:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install packages
        run: sudo apt-get install -y python-dev libhunspell-dev
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run API
        env:
          MKVMERGE_VERSION: "Version 57.0.0 \"Till The End\" 2021-05-22"
        run: python3 api.py &
      - name: Test blank input to API
        run: ./test1.sh
        working-directory: ./test

  discord-bot:

    if: ${{ github.ref == 'refs/heads/master' }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install packages
        run: sudo apt-get install -y expect python-dev libhunspell-dev
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Discord bot can join server
        env:
          DISCORD_BOT_SECRET: ${{ secrets.DISCORD_BOT_SECRET }}
        run: ./discord-bot-test-expect.sh
        working-directory: ./test
